using Newtonsoft.Json;
using PPC.Core.Models.Entity;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Text;

namespace PPC.Core.Models
{
    [Table("Station")]
    public class Stations : IEntity
    {

        #region Base properties and methods(generated by  CodeGenerator)
        [Key]
        [Column("StationID")]
        [JsonProperty("StationID")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        public int StationID { get; set; }

        [Column("StationName")]
        [JsonProperty("StationName")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        public string StationName { get; set; }

        [Column("StationLatinName")]
        [JsonProperty("StationLatinName")]
        public string StationLatinName { get; set; }

        [Column("StationTypeID")]
        [JsonProperty("StationTypeID")]
        public int StationTypeID { get; set; }

        [Column("FWWidth")]
        [JsonProperty("FWWidth")]
        public int? FWWidth { get; set; }

        [Column("AllowableStopsInDay")]
        [JsonProperty("AllowableStopsInDay")]
        public int? AllowableStopsInDay { get; set; }

        [Column("MinNoOfEmptyBobins")]
        [JsonProperty("MinNoOfEmptyBobins")]
        public int? MinNoOfEmptyBobins { get; set; }

        [Column("SpeedMMin")]
        [JsonProperty("SpeedMMin")]
        public int? SpeedMMin { get; set; }

        [Column("BarcodeSign")]
        [JsonProperty("BarcodeSign")]
        [MaxLength(10)]
        public string BarcodeSign { get; set; }

        [Column("IsActive")]
        [JsonProperty("IsActive")]
        public bool IsActive { get; set; }

        [Column("InsUserID")]
        [JsonProperty("InsUserID")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        public int InsUserID { get; set; }

        [Column("InsDate")]
        [JsonProperty("InsDate")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        [MaxLength(10)]
        public string InsDate { get; set; }

        [Column("InsTime")]
        [JsonProperty("InsTime")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        [MaxLength(5)]
        public string InsTime { get; set; }

        [Column("EditUserID")]
        [JsonProperty("EditUserID")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        public int EditUserID { get; set; }

        [Column("EditDate")]
        [JsonProperty("EditDate")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        [MaxLength(10)]
        public string EditDate { get; set; }

        [Column("EditTime")]
        [JsonProperty("EditTime")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        [MaxLength(5)]
        public string EditTime { get; set; }
        #endregion Base properties and methods(generated by  CodeGenerator)



        [JsonProperty("StationType")]
        [ForeignKey(nameof(StationTypeID))]
        public StationTypes StationType { get; set; }

        [JsonProperty("User_InsUser")]
        [ForeignKey(nameof(InsUserID))]
        public Users User_InsUser { get; set; }

        //[JsonProperty("User_EditUser")]
        //[ForeignKey(nameof(EditUserID))]
        //public Users User_EditUser { get; set; }

        //[JsonProperty("User_EditUser")]
        //[ForeignKey(nameof(EditUserID))]
        //public  Users User_EditUser { get; set; }


    }
}
