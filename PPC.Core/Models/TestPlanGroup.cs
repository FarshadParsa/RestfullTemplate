using System.ComponentModel.DataAnnotations.Schema;
using System.ComponentModel.DataAnnotations;
using PPC.Core.Models.Entity;
using System.ComponentModel;
using Newtonsoft.Json;

namespace PPC.Core.Models
{
    [Table("TestPlanGroup")]
    public class TestPlanGroups : IEntity
    {
        #region Base properties and methods(generated by  CodeGenerator)
        [Key]
        [Column("TestPlanGroupID")]
        [JsonProperty("TestPlanGroupID")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]

        public byte TestPlanGroupID { get; set; }

        [Column("TestPlanGroupCode")]
        [JsonProperty("TestPlanGroupCode")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        public string TestPlanGroupCode { get; set; }

        [Column("TestPlanGroupName")]
        [JsonProperty("TestPlanGroupName")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        public string TestPlanGroupName { get; set; }

        [Column("TestPlanGroupSign")]
        [JsonProperty("TestPlanGroupSign")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        public string TestPlanGroupSign { get; set; }



        [Column("IsActive")]
        [JsonProperty("IsActive")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        public bool IsActive { get; set; }
        #endregion Base properties and methods(generated by  CodeGenerator)

    }
}