using System.ComponentModel.DataAnnotations.Schema;
using System.ComponentModel.DataAnnotations;
using PPC.Core.Models.Entity;
using System.ComponentModel;
using Newtonsoft.Json;

namespace PPC.Core.Models
{
    [Table("PackagingPlan")]
    public class PackagingPlans : IEntity
    {
        #region Base properties and methods(generated by  CodeGenerator)
        [Key]
        [Column("PackagingPlanID")]
        [JsonProperty("PackagingPlanID")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        public int PackagingPlanID { get; set; }

        [Column("PackagingPlanCode")]
        [JsonProperty("PackagingPlanCode")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        public string PackagingPlanCode { get; set; }

        [Column("PackagingPlanName")]
        [JsonProperty("PackagingPlanName")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        public string PackagingPlanName { get; set; }

        [Column("PackagingPlanDesc")]
        [JsonProperty("PackagingPlanDesc")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        [MaxLength(150)]
        public string PackagingPlanDesc { get; set; }

        [Column("Capacity")]
        [JsonProperty("Capacity")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        public decimal Capacity { get; set; }

        [Column("EmptyWeight")]
        [JsonProperty("EmptyWeight")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        public decimal EmptyWeight { get; set; }

        [Column("MinCapacity")]
        [JsonProperty("MinCapacity")]
        public decimal? MinCapacity { get; set; }

        [Column("Tolerance")]
        [JsonProperty("Tolerance")]
        public short? Tolerance { get; set; }

        [Column("Describe")]
        [JsonProperty("Describe")]
        [MaxLength(150)]
        public string Describe { get; set; }

        [Column("EditUserID")]
        [JsonProperty("EditUserID")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]


        public int EditUserID { get; set; }

        [Column("EditDate")]
        [JsonProperty("EditDate")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        [MaxLength(10)]

        public string EditDate { get; set; }

        [Column("EditTime")]
        [JsonProperty("EditTime")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        [MaxLength(5)]

        public string EditTime { get; set; }

        [Column("IsActive")]
        [JsonProperty("IsActive")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]


        public bool IsActive { get; set; }
        #endregion Base properties and methods(generated by  CodeGenerator)
    }
}