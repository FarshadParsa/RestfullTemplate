using System.ComponentModel.DataAnnotations.Schema;
using System.ComponentModel.DataAnnotations;
using WebApi.Core.Models.Entity;
using System.ComponentModel;
using Newtonsoft.Json;

namespace WebApi.Core.Models
{
    [Table("Log")]
    public class Logs : IEntity
    {
        #region Base properties and methods(generated by  CodeGenerator)
        [Key]
        [Column("LogID")]
        [JsonProperty("LogID")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]

        public int LogID { get; set; }

        [Column("Date")]
        [JsonProperty("Date")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]


        public string Date { get; set; }

        [Column("Time")]
        [JsonProperty("Time")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]


        public string Time { get; set; }

        [Column("UserID")]
        [JsonProperty("UserID")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        public int UserID { get; set; }

        [Column("Action")]
        [JsonProperty("Action")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        [MaxLength(100)]

        public string Action { get; set; }

        [Column("Details")]
        [JsonProperty("Details")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        [MaxLength(4000)]

        public string Details { get; set; }

        [Column("LoginLogID")]
        [JsonProperty("LoginLogID")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        public long LoginLogID { get; set; }

        [Column("ServerDateTime")]
        [JsonProperty("ServerDateTime")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        public System.DateTime? ServerDateTime { get; set; }
        #endregion Base properties and methods(generated by  CodeGenerator)

        [JsonProperty("User")]
        [ForeignKey(nameof(UserID))]
        public Users User { get; set; }

        [JsonProperty("LoginLog")]
        [ForeignKey(nameof(LoginLogID))]
        public LoginLogs LoginLog{ get; set; }

    }
}