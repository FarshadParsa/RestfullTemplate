using System.ComponentModel.DataAnnotations.Schema;
using System.ComponentModel.DataAnnotations;
using PPC.Core.Models.Entity;
using System.ComponentModel;
using Newtonsoft.Json;

namespace PPC.Core.Models
{
    [Table("LoginLog")]
    public class LoginLogs : IEntity
    {
        #region Base properties and methods(generated by  CodeGenerator)
        [Key]
        [Column("LoginLogID")]
        [JsonProperty("LoginLogID")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]

        public long LoginLogID { get; set; }

        [Column("UserID")]
        [JsonProperty("UserID")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]


        public int UserID { get; set; }

        [Column("StationID")]
        [JsonProperty("StationID")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        public int StationID { get; set; }

        [Column("MachineName")]
        [JsonProperty("MachineName")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        [MaxLength(50)]
        public string MachineName { get; set; }

        [Column("SystemUserName")]
        [JsonProperty("SystemUserName")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        [MaxLength(50)]
        public string SystemUserName { get; set; }

        [Column("LoginDate")]
        [JsonProperty("LoginDate")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        [MaxLength(10)]

        public string LoginDate { get; set; }

        [Column("LoginTime")]
        [JsonProperty("LoginTime")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        [MaxLength(5)]

        public string LoginTime { get; set; }

        [Column("LogoutDate")]
        [JsonProperty("LogoutDate")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        [MaxLength(10)]

        public string LogoutDate { get; set; }

        [Column("LogoutTime")]
        [JsonProperty("LogoutTime")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        [MaxLength(5)]

        public string LogoutTime { get; set; }

        [Column("Version")]
        [JsonProperty("Version")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        [MaxLength(10)]
        public string Version { get; set; }


        [Column("IPAddresses")]
        [JsonProperty("IPAddresses")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        [MaxLength(55)]
        public string IPAddresses { get; set; }
        #endregion Base properties and methods(generated by  CodeGenerator)

        
        [JsonProperty("User")]
        [ForeignKey(nameof(UserID))]
        public Users User { get; set; }

        [JsonProperty("Station")]
        [ForeignKey(nameof(StationID))]
        public Stations Station { get; set; }

    }
}
