using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using System.ComponentModel.DataAnnotations.Schema;
using System.ComponentModel.DataAnnotations;
using WebApi.Core.Models.Entity;
using System.ComponentModel;
using Newtonsoft.Json;

namespace WebApi.Core.Models
{
    [Table("Province")]
    public class Provinces : IEntity
    {
        #region Base properties and methods(generated by  CodeGenerator)
        [Key]
        [Column("ProvinceID")]
        [JsonProperty("ProvinceID")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        public short ProvinceID { get; set; }

        [Column("CountryID")]
        [JsonProperty("CountryID")]
        public short CountryID { get; set; }


        [Column("ProvinceCode")]
        [JsonProperty("ProvinceCode")]
       //[Display(Name = "TblAnot_Province_ProvinceCode", ResourceType = typeof(Resources.Resources))]
        public string ProvinceCode { get; set; }

        [Column("ProvinceName")]
        [JsonProperty("ProvinceName")]


       //[Display(Name = "TblAnot_Province_ProvinceName", ResourceType = typeof(Resources.Resources))]
        public string ProvinceName { get; set; }

        [Column("ProvinceLatinName")]
        [JsonProperty("ProvinceLatinName")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        [MaxLength(50)]
       //[Display(Name = "TblAnot_Province_ProvinceLatinName", ResourceType = typeof(Resources.Resources))]
        public string ProvinceLatinName { get; set; }

        [Column("IsActive")]
        [JsonProperty("IsActive")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]

       //[Display(Name = "TblAnot_Province_IsActive", ResourceType = typeof(Resources.Resources))]
        public bool IsActive { get; set; }
        #endregion Base properties and methods(generated by  CodeGenerator)

        [JsonProperty("Countries")]
        [ForeignKey(nameof(CountryID))]
        public Countries Countries { get; set; }


    }
}
