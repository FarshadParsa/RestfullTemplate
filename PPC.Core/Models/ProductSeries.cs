using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using System.ComponentModel.DataAnnotations.Schema;
using System.ComponentModel.DataAnnotations;
using PPC.Core.Models.Entity;
using System.ComponentModel;
using Newtonsoft.Json;

namespace PPC.Core.Models
{
    [Table("ProductSerie")]
    public class ProductSeries : IEntity
    {
        #region Base properties and methods(generated by  CodeGenerator)
        [Key]
        [Column("ProductSerieID")]
        [JsonProperty("ProductSerieID")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]

        public int ProductSerieID { get; set; }

        [Column("ProductSerieName")]
        [JsonProperty("ProductSerieName")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]


        public string ProductSerieName { get; set; }

        [Column("ProductTypeID")]
        [JsonProperty("ProductTypeID")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]


        public short ProductTypeID { get; set; }

        [Column("ProductSerieLabelName")]
        [JsonProperty("ProductSerieLabelName")]

        [MaxLength(30)]

        public string ProductSerieLabelName { get; set; }

        [Column("ProductSerieLatinLabelName")]
        [JsonProperty("ProductSerieLatinLabelName")]

        [MaxLength(30)]

        public string ProductSerieLatinLabelName { get; set; }

        [Column("Usages")]
        [JsonProperty("Usages")]

        [MaxLength(100)]
        public string Usages { get; set; }

        [Column("BOMSerialCode")]
        [JsonProperty("BOMSerialCode")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        public string BOMSerialCode { get; set; }

        [Column("IsActive")]
        [JsonProperty("IsActive")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]


        public bool IsActive { get; set; }

        #endregion Base properties and methods(generated by  CodeGenerator)


        [JsonProperty("ProductType")]
        [ForeignKey("ProductTypeID")]
        public ProductTypes ProductType { get; set; }


        [NotMapped]
        [JsonProperty("ProductSerieTechniqueList")]
        public List<ProductSerieTechniqueAssigns> ProductSerieTechniqueList { get; set; }

        



    }
}
