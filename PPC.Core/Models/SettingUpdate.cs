using System.ComponentModel.DataAnnotations.Schema;
using System.ComponentModel.DataAnnotations;
using WebApi.Core.Models.Entity;
using System.ComponentModel;
using Newtonsoft.Json;

namespace WebApi.Core.Models
{
    [Table("SettingUpdate")]
    public class SettingUpdates : IEntity
    {
        #region Base properties and methods(generated by  CodeGenerator)
        [Key]
        [Column("UpdateID")]
        [JsonProperty("UpdateID")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]

        public int UpdateID { get; set; }

        [Column("Version")]
        [JsonProperty("Version")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]


        public string Version { get; set; }

        [Column("ServerMap")]
        [JsonProperty("ServerMap")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]


        public string ServerMap { get; set; }

        [Column("FilesName")]
        [JsonProperty("FilesName")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        [MaxLength(1500)]

        public string FilesName { get; set; }

        [Column("Date")]
        [JsonProperty("Date")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        [MaxLength(10)]

        public string Date { get; set; }

        [Column("Describe")]
        [JsonProperty("Describe")]

        [MaxLength(1200)]

        public string Describe { get; set; }
        #endregion Base properties and methods(generated by  CodeGenerator)
    }
}