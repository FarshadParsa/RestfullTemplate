using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using System.ComponentModel.DataAnnotations.Schema;
using System.ComponentModel.DataAnnotations;
using PPC.Core.Models.Entity;
using System.ComponentModel;
using Newtonsoft.Json;

namespace PPC.Core.Models
{
    [Table("ProductGroup")]
    public class ProductGroups : IEntity
    {
        #region Base properties and methods(generated by  CodeGenerator)
        [Key]
        [Column("ProductGroupID")]
        [JsonProperty("ProductGroupID")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]

        public short ProductGroupID { get; set; }

        [Column("ProductGroupName")]
        [JsonProperty("ProductGroupName")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]


        public string ProductGroupName { get; set; }

        [Column("ProductGroupLatinName")]
        [JsonProperty("ProductGroupLatinName")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]


        public string ProductGroupLatinName { get; set; }

        [Column("ProductGroupTypeID")]
        [JsonProperty("ProductGroupTypeID")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        public short ProductGroupTypeID { get; set; }

        [Column("BOMSerialCode")]
        [JsonProperty("BOMSerialCode")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        public string BOMSerialCode { get; set; }

        [Column("IsActive")]
        [JsonProperty("IsActive")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        public bool IsActive { get; set; }

        #endregion Base properties and methods(generated by  CodeGenerator)


        [JsonProperty("ProductGroupType")]
        [ForeignKey(nameof(ProductGroupTypeID))]
        public ProductGroupTypes ProductGroupType { get; set; }




    }
}
