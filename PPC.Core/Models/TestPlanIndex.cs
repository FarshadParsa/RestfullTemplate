using System.ComponentModel.DataAnnotations.Schema;
using System.ComponentModel.DataAnnotations;
using PPC.Core.Models.Entity;
using System.ComponentModel;
using Newtonsoft.Json;


namespace PPC.Core.Models
{
    [Table("TestPlanIndex")]
    public class TestPlanIndexes : IEntity
    {
        #region Base properties and methods(generated by  CodeGenerator)
        [Key]
        [Column("TestPlanIndexID")]
        [JsonProperty("TestPlanIndexID")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]

        public int TestPlanIndexID { get; set; }

        [Column("TestPlanIndexName")]
        [JsonProperty("TestPlanIndexName")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]


        public string TestPlanIndexName { get; set; }

        [Column("Describe")]
        [JsonProperty("Describe")]



        public string Describe { get; set; }

        [Column("IsRawMaterialIndex")]
        [JsonProperty("IsRawMaterialIndex")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]


        public bool IsRawMaterialIndex { get; set; }

        [Column("IsProductIndex")]
        [JsonProperty("IsProductIndex")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]


        public bool IsProductIndex { get; set; }

        [Column("TestPlanIndexFieldTypeID")]
        [JsonProperty("TestPlanIndexFieldTypeID")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]
        public byte TestPlanIndexFieldTypeID { get; set; }

        [Column("IsActive")]
        [JsonProperty("IsActive")]
        [Required(ErrorMessageResourceName = "RequiredField_Anot", ErrorMessageResourceType = typeof(Resources.Resources))]


        public bool IsActive { get; set; }
        #endregion Base properties and methods(generated by  CodeGenerator)
    }
}
